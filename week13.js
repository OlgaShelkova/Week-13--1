//Задание 1
// Создайте переменную currentDate и присвойте ей текущую дату. Значение выведите в консоль.
/*const currentDate = new Date();
console.log(currentDate);*/

//Задание 2
// Создайте переменную currentYear и присвойте ей текущий год. Значение выведите в консоль.
/*const currentYear = new Date().getFullYear();
console.log(currentYear);*/

//Задание 3
// Создайте переменную currentMonth и присвойте ей текущий месяц (от 0 до 11, где 0 - январь, 11 - декабрь). Значение выведите в консоль.
/*const currentMonth = new Date().getMonth();
console.log(currentMonth);*/

//Задание 4
// Создайте переменную currentDay и присвойте ей текущий день месяца. Значение выведите в консоль.
/*const currentDate = new Date(); // Создаем новый объект Date, представляющий текущую дату и время
const currentDay = currentDate.getDate(); // Получаем текущий день месяца с помощью метода getDate()
console.log(currentDay); // Выводим значение текущего дня месяца в консоль*/

//Задание 5
// Создайте переменную birthday и присвойте ей дату вашего дня рождения в текущем году. Значение выведите в консоль.
/*const birthday = new Date(2023, 6, 10); // Здесь 6 представляет июль, так как месяцы начинаются с 0 (0 - январь, 1 - февраль и так далее)
console.log(birthday); // выводим значение birthday в консоль.*/
//Задание 6
// Создайте переменную futureDate и присвойте ей будущую дату (например, через 1 месяц и 10 дней от текущей даты). Значение выведите в консоль.
/*const currentDate = new Date();
const futureDate = new Date();

// Устанавливаем будущую дату, добавляя 1 месяц и 10 дней к текущей дате
futureDate.setMonth(currentDate.getMonth() + 1);
futureDate.setDate(currentDate.getDate() + 10);

console.log(futureDate);*/

//Задание 7
// Выведите в консоль разницу в днях между futureDate и currentDate
/*
const currentDate = new Date();
const futureDate = new Date();

// Устанавливаем будущую дату, добавляя 1 месяц и 10 дней к текущей дате
futureDate.setMonth(currentDate.getMonth() + 1);
futureDate.setDate(currentDate.getDate() + 10);

// Разница в миллисекундах между будущей и текущей датой
const timeDiff = futureDate.getTime() - currentDate.getTime();

// Разница в днях
const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));

console.log(`Разница в днях: ${daysDiff}`);
*/
//Задание 8
// Создайте переменную pastDate и присвойте ей прошедшую дату (например, 5 дней назад от текущей даты). Значение выведите в консоль.
/*const currentDate = new Date();
const pastDate = new Date();

// Устанавливаем прошедшую дату, вычитая 5 дней от текущей даты
pastDate.setDate(currentDate.getDate() - 5);

console.log(pastDate);*/

//Задание 9
// Выведите в консоль разницу в днях между currentDate и pastDate
/*
const currentDate = new Date();// Создаем объект `currentDate` и присваиваем ему текущую дату и время
const pastDate = new Date();// Создаем объект `pastDate` и присваиваем ему прошедшую дату и время
pastDate.setDate(currentDate.getDate() - 5);// Устанавливаем прошедшую дату, вычитая 5 дней от текущей даты

const timeDiff = currentDate.getTime() - pastDate.getTime(); // Вычисляем разницу в миллисекундах между `currentDate` и `pastDate`
const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24)); // Вычисляем разницу в днях, округляя результат до ближайшего целого числа

console.log(`Разница в днях: ${daysDiff}`); // Выводим значение разницы в днях в консоль*/

//Задание 10
// Создайте переменную nextWeek и присвойте ей дату следующей недели. Значение выведите в консоль.
/*
const currentDate = new Date(); // Создаем объект `currentDate` и присваиваем ему текущую дату и время
const nextWeek = new Date(); // Создаем объект `nextWeek` и присваиваем ему текущую дату и время
nextWeek.setDate(currentDate.getDate() + 7); // Устанавливаем дату следующей недели, добавляя 7 дней к текущей дате

console.log(nextWeek); // Выводим значение в консоль
*/
//Задание 11
// Выведите в консоль день недели для nextWeek
/*
const currentDate = new Date(); // Создаем объект `currentDate` и присваиваем ему текущую дату и время
const nextWeek = new Date(); // Создаем объект `nextWeek` и присваиваем ему текущую дату и время
nextWeek.setDate(currentDate.getDate() + 7); // Устанавливаем дату следующей недели, добавляя 7 дней к текущей дате

// Получаем день недели для nextWeek
const daysOfWeek = ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб']; // Создаем массив `daysOfWeek`, содержащий сокращенные названия дней недели
const dayIndex = nextWeek.getDay(); // Получаем индекс дня недели (0 - Воскресенье, 1 - Понедельник, и т.д) для `nextWeek`
const dayOfWeek = daysOfWeek[dayIndex]; // Получаем значение дня недели из массива `daysOfWeek` по индексу `dayIndex`

console.log(`День недели: ${dayOfWeek}`); // Выводим значение дня недели в консоль со строкой "День недели: "
*/
//Задание 12
// Создайте переменную futureYear и присвойте ей значение текущего года плюс 5. Значение выведите в консоль.
/*
const currentDate = new Date();// Получаем текущую дату
const currentYear = currentDate.getFullYear();// Получаем текущий год из текущей даты
const futureYear = currentYear + 5;// Вычисляем будущий год, добавляя 5 к текущему году

console.log(`Через 5 лет будет ${futureYear} год`);// Выводим значение futureYear в консоль
*/
//Задание 13
// Создайте переменную futureDateInFutureYear и присвойте ей дату вашего дня рождения в будущем году (futureYear). Значение выведите в консоль.
/*const futureYear = 2024; // Устанавливаем будущий год
const futureDateInFutureYear = new Date(futureYear, 6, 10); // Создаем объект Date с датой дня рождения в будущем году

console.log(futureDateInFutureYear); // Выводим значение futureDateInFutureYear в консоль
*/
//Задание 14
// Выведите в консоль разницу в годах между futureYear и текущим годом
/*
const futureYear = 2029;// Задаем переменную futureYear, которая содержит будущий год, с которым будем сравнивать текущий год
const currentYear = new Date().getFullYear(); // Получаем текущий год, используя объект Date и его метод getFullYear()
const differenceInYears = futureYear - currentYear;// Вычисляем разницу между будущим годом и текущим годом

console.log(`Разница в годах между ${futureYear} и текущим годом ${currentYear} составляет ${differenceInYears} лет.`);// Выводим разницу в годах в консоль
*/
//Задание 15
// Используя метод Date.parse(), создайте новый объект date и преобразуйте переменную strDate в дату.
// Выведите объект date в консоль.
/*
const strDate = '2023-06-15T08:30:00.000Z'; // Задаем строку с датой и временем
const date = new Date(Date.parse(strDate)); // Создаем новый объект `date` с использованием метода `Date.parse()` для преобразования строки в дату

console.log(date); // Выводим объект `date` в консоль
*/
//Задание 16
// Используя метод Date.parse(), получите таймстамп (количество миллисекунд) из переменной strDate.
// Выведите таймстамп в консоль.
/*
const strDate = '2023-06-15T08:30:00.000Z'; // Задаем строку с датой и временем
const timestamp = Date.parse(strDate); // Используем метод `Date.parse()` для получения таймстампа

console.log(timestamp); // Выводим таймстамп в консоль*/

//Задание 17
// Используя метод Date.parse(), попытайтесь преобразовать переменную wrongDate в дату. Добавьте условие, если результат преобразования является NaN, выведите в консоль сообщение 'Неправильный формат даты', в другом случае, выведите сообщение 'Правильный формат даты'.
// Подсказка: используйте условие if...else
//const date = '2023/06/15';
/*
const wrongDate = '2023/06/15'; // Задаем неправильный формат даты
const parsedDate = Date.parse(wrongDate); // Используем метод `Date.parse()` для преобразования даты

if (isNaN(parsedDate)) {
console.log('Неправильный формат даты');
} else {
console.log('Правильный формат даты');
}*/
//Задание 18
// Используя цикл if...else, проверьте является ли переменная number положительным. Результат выведите в консоль.
/*const number = 231;
if (number > 0) {
    // Если `number` больше нуля, выполнить следующий блок кода
    console.log("Число положительное"); // Вывести сообщение в консоль
} else if (number === 0) {
    // Если `number` равно нулю, выполнить этот блок кода
    console.log("Число равно нулю"); // Вывести сообщение в консоль
} else {
    // Если ни одно из условий выше не выполнилось, выполнить этот блок кода
    console.log("Число отрицательное"); // Вывести сообщение в консоль
}*/
//Задание 19
// Используя цикл if...else, проверьте является ли переменная number чётным числом. Результат выведите в консоль.
/*
const number = 7; // Задаем число

if (number % 2 === 0) { // Проверяем, является ли число четным
console.log(`${number} - четное число`);
} else {
console.log(`${number} - нечетное число`);
}
*/
//Задание 20
// Используя цикл if...else, проверьте является ли переменная number кратным 3. Результат выведите в консоль.
/*
const number = 9; // Задаем число

if (number % 3 === 0) { // Проверяем, является ли число кратным 3
  console.log(`${number} является кратным 3`);
} else {
  console.log(`${number} не является кратным 3`);
}
*/
//Задание 21
// Используя цикл if...else, проверьте является ли переменная number однозначным. Результат выведите в консоль.
/*
const number = 4; // Задаем число

if (number >= 0 && number <= 9) { // Проверяем, является ли число однозначным
console.log(`${number} - однозначное число`);
} else {
console.log(`${number} - не однозначное число`);
}
*/
//Задание 22
// Используя цикл if...else, проверьте является ли переменная number двузначным. Результат выведите в консоль.
/*
const number = 42; // Задаем число

if (number >= 10 && number <= 99) {
  // Проверяем, является ли number двузначным числом
  console.log(`${number} является двузначным`);
} else {
  console.log(`${number} не является двузначным`);
}
*/
//Задание 23
// Используя цикл if...else, проверьте является ли переменная number положительным или нулём. Результат выведите в консоль.
/*
const number = 0; // Задаем число

if (number > 0) { // Проверяем, является ли число положительным
console.log(`${number} - положительное число`);
} else if (number === 0) { // Проверяем, является ли число нулем
console.log(`${number} - нуль`);
} else { // Если число не является положительным и не является нулем
console.log(`${number} - отрицательное число`);
}
*/
//Задание 24
// Используя цикл if...else, проверьте является ли переменная number кратным 5 или 7. Результат выведите в консоль.
/*
const number = 35; // Задаем число

if (number % 5 === 0 || number % 7 === 0) {
  // Проверяем, является ли number кратным 5 или 7
  console.log(`число ${number} является кратным 5 или 7`);
} else {
  console.log(`число ${number} не является кратным 5 или 7`);
}
*/
//Задание 25
// Используя цикл if...else, проверьте является ли переменная number отрицательным или нулём. Результат выведите в консоль.
/*
const number = -9; // Задаем число

if (number < 0) { // Проверяем, является ли число отрицательным
console.log(`${number} - отрицательное число`);
} else if (number === 0) { // Проверяем, является ли число нулем
console.log(`${number} - нуль`);
} else { // Если число не является отрицательным и не является нулем
console.log(`${number} - положительное число`);
}
*/
//Задание 26
// Используя цикл if...else, проверьте является ли переменная number трёхзначным положительным числом. Результат выведите в консоль.
/*
const number = 123; // Задаем число

if (number >= 100 && number <= 999) { // Проверяем, является ли число трехзначным
console.log(`${number} - трехзначное положительное число`);
} else { // Если число не является трехзначным положительным числом
console.log(`${number} - не трехзначное положительное число`);
}
*/
//Задание 27
// Используя switch case, напишите программу, которая принимает на вход целое число от 1 до 7 и выводит в консоль название соответствующего дня недели (например, 1 - "Понедельник", 2 - "Вторник" и т.д.).
/*
const dayNumber = 3; // Задаем число дня недели

switch (dayNumber) {
case 1:
console.log("Понедельник");
break;
case 2:
console.log("Вторник");
break;
case 3:
console.log("Среда");
break;
case 4:
console.log("Четверг");
break;
case 5:
console.log("Пятница");
break;
case 6:
console.log("Суббота");
break;
case 7:
console.log("Воскресенье");
break;
default:
console.log("Некорректный день недели");
break;
}
*/
//Задание 28
// Используя цикл switch case, напишите программу, которая принимает на вход символ направления (N, S, E, W) и выводит в консоль полное название этого направления (N - "Север", S - "Юг", E - "Восток", W - "Запад").
/*
let direction = 'W'; // Задаем символ направления (N, S, E, W)
let fullName; // Объявляем переменную для полного названия направления

switch (direction) {
  case 'N':
    fullName = 'Север';
    break;
  case 'S':
    fullName = 'Юг';
    break;
  case 'E':
    fullName = 'Восток';
    break;
  case 'W':
    fullName = 'Запад';
    break;
  default:
    fullName = 'Неверное направление';
}

console.log(fullName); // Выводим полное название направления в консоль
*/
